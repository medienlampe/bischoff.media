<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <link
    rel="preload"
    href="./assets/css/app.css"
    as="style"
    onload="this.onload=null;this.rel='stylesheet'"
  />
  <noscript>
    <link rel="stylesheet" type="text/css" href="./assets/app.css" />
  </noscript>
  <script>
    (function(t) {
      "use strict";
      t.loadCSS || (t.loadCSS = function() {});
      var e = (loadCSS.relpreload = {});
      if (
        ((e.support = (function() {
          var e;
          try {
            e = t.document.createElement("link").relList.supports("preload");
          } catch (t) {
            e = !1;
          }
          return function() {
            return e;
          };
        })()),
        (e.bindMediaToggle = function(t) {
          function e() {
            t.addEventListener
              ? t.removeEventListener("load", e)
              : t.attachEvent && t.detachEvent("onload", e),
              t.setAttribute("onload", null),
              (t.media = a);
          }
          var a = t.media || "all";
          t.addEventListener
            ? t.addEventListener("load", e)
            : t.attachEvent && t.attachEvent("onload", e),
            setTimeout(function() {
              (t.rel = "stylesheet"), (t.media = "only x");
            }),
            setTimeout(e, 3e3);
        }),
        (e.poly = function() {
          if (!e.support())
            for (
              var a = t.document.getElementsByTagName("link"), n = 0;
              n < a.length;
              n++
            ) {
              var o = a[n];
              "preload" !== o.rel ||
                "style" !== o.getAttribute("as") ||
                o.getAttribute("data-loadcss") ||
                (o.setAttribute("data-loadcss", !0), e.bindMediaToggle(o));
            }
        }),
        !e.support())
      ) {
        e.poly();
        var a = t.setInterval(e.poly, 500);
        t.addEventListener
          ? t.addEventListener("load", function() {
              e.poly(), t.clearInterval(a);
            })
          : t.attachEvent &&
            t.attachEvent("onload", function() {
              e.poly(), t.clearInterval(a);
            });
      }
      "undefined" != typeof exports
        ? (exports.loadCSS = loadCSS)
        : (t.loadCSS = loadCSS);
    })("undefined" != typeof global ? global : this);
  </script>
  <link rel="author" href="./humans.txt" />
  <link rel="authorization_endpoint" href="https://indieauth.com/auth" />
  <title>{{ title }}</title>
  <meta
    name="description"
    content="The personal web profile of the full-stack developer Sven Bischoff including profile links for his social media."
  />
  <meta name="theme-color" content="#37474f" />
  <link rel="apple-touch-icon" href="./assets/pwa/a4db7015-2abf-ca0f-2514-44c4f7133fe3.webPlatform.png">
  <link rel="manifest" href="./manifest.json" />
  <link rel="shortcut icon" href="./assets/img/favicon.png" />
</head>